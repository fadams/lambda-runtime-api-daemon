# Install private Docker container registry in Kubernetes.
# Derived from the documentation in https://www.paulsblog.dev/how-to-install-a-private-docker-container-registry-in-kubernetes/
# 
# Deploy with:
# kubectl apply -f registry.yaml
#
# Remove with:
# kubectl delete -f registry.yaml
#
# Get images/repositories list from registry
# http://localhost:5000/v2/_catalog

# Create docker-registry Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: docker-registry
---
# Create PersistentVolume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: docker-registry-pv
  namespace: docker-registry
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  capacity:
    storage: 1Gi
  hostPath:
    path: /tmp/registry
  storageClassName: standard
---
# Create PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: docker-registry-pvc
  namespace: docker-registry
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard
---
# Deploy private registry
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry-k8s
  namespace: docker-registry
  labels:
    app: docker-registry-k8s
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry-k8s
  template:
    metadata:
      labels:
        app: docker-registry-k8s
    spec:
      volumes:
      #- name: certs-vol
      #  hostPath:
      #    path: /opt/certs
      #    type: Directory
      - name: registry-volume
        #hostPath:
        #  path: /tmp/registry
        #  type: Directory
        persistentVolumeClaim:
          claimName: docker-registry-pvc

      containers:
        - image: registry:2
          name: docker-registry-k8s
          imagePullPolicy: IfNotPresent
          #env:
          #- name: REGISTRY_HTTP_TLS_CERTIFICATE
          #  value: "/certs/registry.crt"
          #- name: REGISTRY_HTTP_TLS_KEY
          #  value: "/certs/registry.key"
          ports:
            - containerPort: 5000
          volumeMounts:
          #- name: certs-vol
          #  mountPath: /certs
          - name: registry-volume
            mountPath: /var/lib/registry
---
# Expose registry deployment as a nodeport service type
apiVersion: v1
kind: Service
metadata:
  name: docker-registry-k8s
  namespace: docker-registry
  labels:
    app: docker-registry-k8s
spec:
  ports:
  - port: 5000
    nodePort: 30001
    protocol: TCP
    targetPort: 5000
  selector:
    app: docker-registry-k8s
  type: NodePort

