#!/bin/bash
# This is a simple custom Lambda runtime implemented in bash.
# It uses curl to connect to the Lambda Runtime API next and response endpoints.
# Based on the custom runtime tutorial presented in the AWS documentation.
# https://docs.aws.amazon.com/lambda/latest/dg/runtimes-walkthrough.html
set -euo pipefail

# Initialization - load function handler
source $LAMBDA_TASK_ROOT/"$(echo $_HANDLER | cut -d. -f1).sh"

# Processing
while true
do
    HEADERS="$(mktemp)"

    # Get an event. The HTTP request will block until one is received
    EVENT_DATA=$(curl -sS -LD "$HEADERS" -X GET "http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/next")

    # Extract request ID by scraping the headers received above
    REQUEST_ID=$(grep -Fi Lambda-Runtime-Aws-Request-Id "$HEADERS" | tr -d '[:space:]' | cut -d: -f2)

    # Run the handler function from the script passing the EVENT_DATA and also
    # the HEADERS dir from the next endpoint response as quick & dirty context.
    RESPONSE=$($(echo "$_HANDLER" | cut -d. -f2) "$EVENT_DATA" "$HEADERS")

    # Send the response
    curl -sS -o /dev/null -X POST "http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/$REQUEST_ID/response"  -d "$RESPONSE"
done
